import Head from 'next/head'
import { Inter } from 'next/font/google'
import { CourseDetailBanner,CourseDetailContent,OurCoursesCard } from '@/components/pages'
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import * as courseAction from '@/redux/action/course';
import * as syllabusAction from '@/redux/action/syllabus';
import { useEffect,useState } from 'react';

const inter = Inter({ subsets: ['latin'] })
 function CourseDetail({getAllCoures}) {
  const [courseList, setCourseList] = useState([]);
  const [allSyllabusList, setSyllabusList] = useState([]);

useEffect(()=>{

    // console.log('props-------------->',props)
    handleGetCouseList()
},[]);


const handleGetCouseList = async () => {
  try {
    const resCourseList = await getAllCoures();
    const { data, status } = resCourseList;
    console.log('data---------->', data);
    if (status) {
      setCourseList(data);
    }
  } catch (e) {
    console.log(e);
  }
};


    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={`${inter.className}`}>


                <div className='row'>
                    <div className='col-12'>
                        <OurCoursesCard courseList={courseList} isSwiper={false} isViewAllBtn={false} />
                        {/* <CourseDetailContent/> */}
                    </div>
                </div>


            </main>
        </>
    )
};

const mapStatesToProps = ({
    course: {
      isCourseListLoader = false,
      courseList = [],
      isCourseCreateLoader = false,
      isCourseDeleteLoader = false
    },
    syllabus: { isSyllabusListLoader = false, syllabusList = [] }
  }) => {
    return {
      isCourseListLoader,
      courseList,
      isSyllabusListLoader,
      syllabusList,
      isCourseCreateLoader,
      isCourseDeleteLoader
    };
  };
  
  const mapDispatchToProps = (dispatch) => {
    return bindActionCreators(
      {
        ...courseAction,
        ...syllabusAction
      },
      dispatch
    );
  };
  
  export default connect(mapStatesToProps, mapDispatchToProps)(CourseDetail);
